import { createClient } from '@supabase/supabase-js';
import * as fs from 'fs';
import * as path from 'path';
import * as dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ä–µ–∞–∫—Ü–∏–π...');
console.log('Environment check:');
if (!supabaseUrl) console.error('- NEXT_PUBLIC_SUPABASE_URL is missing');
if (!supabaseServiceKey)
  console.error('- SUPABASE_SERVICE_ROLE_KEY is missing');

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env.local');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function createReactionsTable() {
  try {
    console.log('üìñ –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª...');

    // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª
    const sqlPath = path.join(process.cwd(), 'create_reactions_table.sql');
    const sqlContent = fs.readFileSync(sqlPath, 'utf8');

    console.log('üöÄ –í—ã–ø–æ–ª–Ω—è–µ–º SQL –º–∏–≥—Ä–∞—Ü–∏—é...');

    // –†–∞–∑–±–∏–≤–∞–µ–º SQL –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (–ø–æ —Ç–æ—á–∫–µ —Å –∑–∞–ø—è—Ç–æ–π)
    const sqlCommands = sqlContent
      .split(';')
      .map((cmd) => cmd.trim())
      .filter(
        (cmd) =>
          cmd.length > 0 && !cmd.startsWith('--') && !cmd.startsWith('/*')
      );

    console.log(`üìù –ù–∞–π–¥–µ–Ω–æ ${sqlCommands.length} SQL –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è`);

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∫–∞–∂–¥—É—é –∫–æ–º–∞–Ω–¥—É –æ—Ç–¥–µ–ª—å–Ω–æ
    for (let i = 0; i < sqlCommands.length; i++) {
      const command = sqlCommands[i];

      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
      if (
        command.startsWith('--') ||
        command.startsWith('/*') ||
        command.trim() === ''
      ) {
        continue;
      }

      console.log(`‚ö° –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É ${i + 1}/${sqlCommands.length}...`);

      try {
        const { data, error } = await supabase.rpc('exec_sql', {
          sql_query: command + ';',
        });

        if (error) {
          // –ï—Å–ª–∏ RPC —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π SQL
          const { data: directData, error: directError } = await supabase
            .from('_temp_sql_execution')
            .select('*')
            .limit(0);

          if (directError) {
            console.log(
              `‚ö†Ô∏è  –ö–æ–º–∞–Ω–¥–∞ ${i + 1} –≤—ã–∑–≤–∞–ª–∞ –æ—à–∏–±–∫—É (–≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞):`,
              error.message
            );
          }
        } else {
          console.log(`‚úÖ –ö–æ–º–∞–Ω–¥–∞ ${i + 1} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
        }
      } catch (cmdError) {
        console.log(`‚ö†Ô∏è  –ö–æ–º–∞–Ω–¥–∞ ${i + 1} –≤—ã–∑–≤–∞–ª–∞ –æ—à–∏–±–∫—É:`, cmdError);
      }
    }

    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞
    const { data: tableCheck, error: checkError } = await supabase
      .from('campaign_reactions')
      .select('count(*)')
      .limit(1);

    if (checkError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã:', checkError.message);

      // –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –Ω–∞–ø—Ä—è–º—É—é —Å –±–∞–∑–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
      console.log('üîß –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –Ω–∞–ø—Ä—è–º—É—é...');

      const basicTableSQL = `
        CREATE TABLE IF NOT EXISTS public.campaign_reactions (
          id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
          campaign_id UUID NOT NULL,
          user_id UUID NOT NULL,
          reaction_type TEXT NOT NULL CHECK (reaction_type IN ('like', 'love', 'fire', 'clap', 'thinking', 'wow')),
          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
          updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
          UNIQUE(campaign_id, user_id)
        );
        
        ALTER TABLE public.campaign_reactions ENABLE ROW LEVEL SECURITY;
        
        CREATE POLICY "Enable read access for all users" ON public.campaign_reactions
          FOR SELECT USING (true);
        
        CREATE POLICY "Enable insert for authenticated users" ON public.campaign_reactions
          FOR INSERT WITH CHECK (auth.uid() = user_id);
        
        CREATE POLICY "Enable update for own reactions" ON public.campaign_reactions
          FOR UPDATE USING (auth.uid() = user_id) WITH CHECK (auth.uid() = user_id);
        
        CREATE POLICY "Enable delete for own reactions" ON public.campaign_reactions
          FOR DELETE USING (auth.uid() = user_id);
      `;

      console.log('üìù –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã...');
      // –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å SQL —á–µ—Ä–µ–∑ Supabase Dashboard
      console.log(
        '‚ö†Ô∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π SQL –≤ Supabase Dashboard:'
      );
      console.log('='.repeat(80));
      console.log(basicTableSQL);
      console.log('='.repeat(80));
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ campaign_reactions —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
      console.log('üìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π:', tableCheck);
    }

    console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã:', error);

    // –í—ã–≤–æ–¥–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è
    console.log('\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard');
    console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor');
    console.log('3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ create_reactions_table.sql');
    console.log('4. –ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: npm run create-reactions-table');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
createReactionsTable();
