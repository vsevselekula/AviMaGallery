import React, { useState, useEffect } from 'react';
import { Campaign } from '@/types/campaign';
import { CampaignSection } from './CampaignSection';
import { TestDataEditor } from '@/components/features/campaign/TestDataEditor';
import { LinksEditor } from './LinksEditor';
import { createClientComponentClient } from '@supabase/auth-helpers-nextjs';

interface CampaignType {
  id: string;
  name: string;
  description?: string;
  is_active: boolean;
  sort_order: number;
}

interface CampaignEditFormProps {
  editedCampaign: Campaign;
  availableVerticals: string[];
  onInputChange: (field: keyof Campaign, value: unknown) => void;
}

export function CampaignEditForm({
  editedCampaign,
  availableVerticals,
  onInputChange,
}: CampaignEditFormProps) {
  const [campaignTypes, setCampaignTypes] = useState<CampaignType[]>([]);
  const supabase = createClientComponentClient();

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∏–ø—ã –∫–∞–º–ø–∞–Ω–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    const fetchCampaignTypes = async () => {
      try {
        const { data, error } = await supabase
          .from('campaign_types')
          .select('*')
          .eq('is_active', true)
          .order('sort_order');

        if (error) {
          console.error('Error fetching campaign types:', error);
          // Fallback –∫ —Å—Ç–∞—Ç–∏—á–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º
          setCampaignTypes([
            { id: '1', name: 'T1', is_active: true, sort_order: 1 },
            { id: '2', name: 'T2', is_active: true, sort_order: 2 },
          ]);
        } else {
          setCampaignTypes(data || []);
        }
      } catch (error) {
        console.error('Error fetching campaign types:', error);
        // Fallback –∫ —Å—Ç–∞—Ç–∏—á–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º
        setCampaignTypes([
          { id: '1', name: 'T1', is_active: true, sort_order: 1 },
          { id: '2', name: 'T2', is_active: true, sort_order: 2 },
        ]);
      }
    };

    fetchCampaignTypes();
  }, [supabase]);

  const handleArrayChange = (field: keyof Campaign, value: string) => {
    // –ü—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç—Ä–æ–∫—É –∫–∞–∫ –µ—Å—Ç—å, –±–µ–∑ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤
    // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
    onInputChange(field, value);
  };

  const handleFlightPeriodChange = (
    field: 'start_date' | 'end_date',
    value: string
  ) => {
    const currentPeriod = editedCampaign.flight_period || {
      start_date: '',
      end_date: '',
    };
    onInputChange('flight_period', {
      ...currentPeriod,
      [field]: value,
    });
  };

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
      {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <CampaignSection
        title="–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
        icon={<span>üìã</span>}
        className="md:col-span-2"
      >
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-300 mb-2">
              –û–ø–∏—Å–∞–Ω–∏–µ
            </label>
            <textarea
              value={editedCampaign.description || ''}
              onChange={(e) => onInputChange('description', e.target.value)}
              className="w-full p-3 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500"
              rows={3}
              placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏"
            />
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-300 mb-2">
                –¢–∏–ø –∫–∞–º–ø–∞–Ω–∏–∏
              </label>
              <select
                value={editedCampaign.campaign_type || ''}
                onChange={(e) => onInputChange('campaign_type', e.target.value)}
                className="w-full p-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:border-blue-500"
              >
                <option value="" disabled>
                  –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–∞–º–ø–∞–Ω–∏–∏
                </option>
                {campaignTypes.map((type) => (
                  <option key={type.id} value={type.name}>
                    {type.name}
                  </option>
                ))}
              </select>
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-300 mb-2">
                –í–µ—Ä—Ç–∏–∫–∞–ª—å
              </label>
              <select
                value={editedCampaign.campaign_vertical || ''}
                onChange={(e) =>
                  onInputChange('campaign_vertical', e.target.value)
                }
                className="w-full p-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:border-blue-500"
              >
                <option value="" disabled>
                  –í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å
                </option>
                {availableVerticals.map((vertical) => (
                  <option key={vertical} value={vertical}>
                    {vertical}
                  </option>
                ))}
              </select>
            </div>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-300 mb-2">
              –°–ª–æ–≥–∞–Ω
            </label>
            <input
              type="text"
              value={editedCampaign.slogan || ''}
              onChange={(e) => onInputChange('slogan', e.target.value)}
              className="w-full p-3 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500"
              placeholder="–°–ª–æ–≥–∞–Ω –∫–∞–º–ø–∞–Ω–∏–∏"
            />
          </div>
        </div>
      </CampaignSection>

      {/* –ü–µ—Ä–∏–æ–¥—ã –∏ –∞—É–¥–∏—Ç–æ—Ä–∏—è */}
      <CampaignSection title="–ü–µ—Ä–∏–æ–¥—ã –∏ –∞—É–¥–∏—Ç–æ—Ä–∏—è" icon={<span>üìÖ</span>}>
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-300 mb-2">
              –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞
            </label>
            <input
              type="date"
              value={editedCampaign.flight_period?.start_date || ''}
              onChange={(e) =>
                handleFlightPeriodChange('start_date', e.target.value)
              }
              className="w-full p-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:border-blue-500"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-300 mb-2">
              –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            </label>
            <input
              type="date"
              value={editedCampaign.flight_period?.end_date || ''}
              onChange={(e) =>
                handleFlightPeriodChange('end_date', e.target.value)
              }
              className="w-full p-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:border-blue-500"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-300 mb-2">
              –ì–µ–æ–≥—Ä–∞—Ñ–∏—è
            </label>
            <input
              type="text"
              value={editedCampaign.geo || ''}
              onChange={(e) => onInputChange('geo', e.target.value)}
              className="w-full p-3 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500"
              placeholder="–†–µ–≥–∏–æ–Ω –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-300 mb-2">
              –ê—É–¥–∏—Ç–æ—Ä–∏—è
            </label>
            <input
              type="text"
              value={editedCampaign.audience || ''}
              onChange={(e) => onInputChange('audience', e.target.value)}
              className="w-full p-3 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500"
              placeholder="–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è"
            />
          </div>
        </div>
      </CampaignSection>

      {/* –¢–∞—Ä–≥–µ—Ç—ã –∏ –∫–∞–Ω–∞–ª—ã */}
      <CampaignSection title="–¢–∞—Ä–≥–µ—Ç—ã –∏ –∫–∞–Ω–∞–ª—ã" icon={<span>üéØ</span>}>
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-300 mb-2">
              –¢–∞—Ä–≥–µ—Ç—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏–ª–∏ —Ç–æ—á–∫—É)
            </label>
            <input
              type="text"
              value={
                Array.isArray(editedCampaign.targets)
                  ? editedCampaign.targets.join(', ')
                  : typeof editedCampaign.targets === 'string'
                    ? editedCampaign.targets
                    : ''
              }
              onChange={(e) => handleArrayChange('targets', e.target.value)}
              className="w-full p-3 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500"
              placeholder="–¢–∞—Ä–≥–µ—Ç 1, –¢–∞—Ä–≥–µ—Ç 2, –¢–∞—Ä–≥–µ—Ç 3"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-300 mb-2">
              –ö–∞–Ω–∞–ª—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏–ª–∏ —Ç–æ—á–∫—É)
            </label>
            <input
              type="text"
              value={
                Array.isArray(editedCampaign.channels)
                  ? editedCampaign.channels.join(', ')
                  : typeof editedCampaign.channels === 'string'
                    ? editedCampaign.channels
                    : ''
              }
              onChange={(e) => handleArrayChange('channels', e.target.value)}
              className="w-full p-3 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500"
              placeholder="–¢–í, –†–∞–¥–∏–æ, –ò–Ω—Ç–µ—Ä–Ω–µ—Ç"
            />
          </div>
        </div>
      </CampaignSection>

      {/* –ú–µ–¥–∏–∞ */}
      <CampaignSection title="–ú–µ–¥–∏–∞" icon={<span>üé¨</span>}>
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-300 mb-2">
              URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            </label>
            <input
              type="url"
              value={editedCampaign.image_url || ''}
              onChange={(e) => onInputChange('image_url', e.target.value)}
              className="w-full p-3 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500"
              placeholder="https://example.com/image.jpg"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-300 mb-2">
              URL –≤–∏–¥–µ–æ
            </label>
            <input
              type="url"
              value={editedCampaign.video_url || ''}
              onChange={(e) => onInputChange('video_url', e.target.value)}
              className="w-full p-3 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500"
              placeholder="https://example.com/video.mp4"
            />
          </div>
        </div>
      </CampaignSection>

      {/* –°—Å—ã–ª–∫–∏ */}
      <CampaignSection title="–°—Å—ã–ª–∫–∏ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã" icon={<span>üîó</span>}>
        <LinksEditor
          value={editedCampaign.links}
          onChange={(value) => onInputChange('links', value)}
          label="–°—Å—ã–ª–∫–∏ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∫–∞–º–ø–∞–Ω–∏–∏"
        />
      </CampaignSection>

      {/* –¢–µ—Å—Ç—ã */}
      <CampaignSection
        title="–¢–µ—Å—Ç—ã"
        icon={<span>üß™</span>}
        className="md:col-span-2"
      >
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <TestDataEditor
            value={editedCampaign.pre_tests}
            onChange={(value: unknown) => onInputChange('pre_tests', value)}
            label="–ü—Ä–µ-—Ç–µ—Å—Ç—ã"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ-—Ç–µ—Å—Ç–æ–≤ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ—Ç—á–µ—Ç—ã"
          />

          <TestDataEditor
            value={editedCampaign.post_tests}
            onChange={(value: unknown) => onInputChange('post_tests', value)}
            label="–ü–æ—Å—Ç-—Ç–µ—Å—Ç—ã"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç-—Ç–µ—Å—Ç–æ–≤ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ—Ç—á–µ—Ç—ã"
          />
        </div>
      </CampaignSection>
    </div>
  );
}
